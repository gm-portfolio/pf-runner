user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include     /etc/nginx/mime.types;

  server_tokens off;

  log_format  compression '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" "$gzip_ratio"';

  gzip on;
  gzip_comp_level 3;

  server {
    listen *:80;
    server_name ${DOMAIN}, www.${DOMAIN};

    location ^~ /.well-known/acme-challenge { root /var/www/letsencrypt; }

    location / { return 301 https://$host$request_uri; }
  }

  server {
    listen *:443 ssl http2;
    server_name ${DOMAIN}, www.${DOMAIN};

    ssl_certificate  /etc/letsencrypt/certificates/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/certificates/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    access_log /var/log/nginx/access.log compression buffer=16k flush=5m;

    # Disable Framing and Cross-Scripting
    add_header X-Frame-Options 'SAMEORIGIN';
    add_header X-XSS-Protection '1; mode=block';

    # Buffer size for POST submission
    client_body_buffer_size 10K;
    client_max_body_size    8m;

    # Buffer size for Headers
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    # Max time to receive client headers/body
    client_body_timeout   12;
    client_header_timeout 12;

    # Max time to keep connection open for
    keepalive_timeout 15;

    # Max time for the client accept/receive a response
    send_timeout 10;

    # Skip buffering for static files
    sendfile on;

    # Optimize sendfile packets
    tcp_nopush on;


    location / {
      gzip                      off;
      access_log                off;
      proxy_pass                http://pf-front:80;
      proxy_http_version        1.1;
      add_header                Cache-Control no-cache;
      http2_push_preload        on;

      if ($request_uri ~* .(jpg|jpeg|png|gif|ico|css|js)$) {
        add_header                Cache-Control public;
        add_header                Pragma public;
        add_header                Vary Accept-Encoding;
        expires                   365d;
      }
    }
  }
}